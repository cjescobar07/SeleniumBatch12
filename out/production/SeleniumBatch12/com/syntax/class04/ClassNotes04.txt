Selenium Class 4

CSS Selector(Cascading Style Sheet)
It is another way of locating elements on the webpage

Syntax:
tagname[attribute = 'attribute value']
Example: button[type = 'submit']
----------------------------------------------------
CSS does not give an opportunity to locate the element by its text
----------------------------------------------------
Shortcuts for CSS:
Shortcut for ClassName --> "."
Syntax: tagname.classNameValue
Ex:     input.button
----------------------------------------------------
Shortcut for ID --> "#"
Syntax: tagname#IDValue>
Ex:     input#twotabsearchtextbox
----------------------------------------------------
contains() method in class:
*symbol represents contains method in CSS
    tagname[attribute *= 'attribute value']
Ex: input[placeholder *= 'Email']
----------------------------------------------------
Starts-with method in CSS:
^ (Circumflex) symbol represents starts with method
tagname[attribute ^= 'starting attribute value']
Ex: input[type ^= 'pass']
----------------------------------------------------
ends-with method in CSS:
$ symbol represents ends-with method in css
tagname[attribute $= 'ending attribute value']
Ex: img[src $= 'syntax.png']

xpath vs css
-- CSS cannot locate the elements by text whereas xpath can
-- no ends-with method in xpath, but you can use in CSS
-- CSS is faster at finding elements than xapth
-- CSS has shortcuts, xpath does not
-- no advanced CSS
-- CSS has simpler syntax than xpath

WebElement Commands:
consists of several methods where we can perform an action and get the element state
on the webpage

isEnabled() -- boolean value
isDisplayed() -- boolean value
isSelected() -- boolean value
clear() -- void
getText() -- String value
getAttribute() -- String value
submit() -- void

Best practice is to create a WebElement variable, so we can reuse it in the future